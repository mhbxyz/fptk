[project]
name = "fptk"
version = "0.1.1"
requires-python = ">=3.12"
description = "Pragmatic functional programming helpers for Python (pipe/compose/curry, Option/Result, lazy iterators, applicative validation)."
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Manoah Bernier", email = "manoah.bernier@pm.me" }
]
keywords = ["functional", "monad", "result", "option", "compose", "pipe", "iterators"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries",
]
dependencies = []

[dependency-groups]
dev = [
    "black>=25.1.0",
    "build>=1.3.0",
    "hatchling>=1.27.0",
    "hypothesis>=6.138.2",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.9",
    "twine>=6.1.0",
]

[project.urls]
Homepage = "https://github.com/mhbxyz/fptk"
Issues = "https://github.com/mhbxyz/fptk/issues"
Changelog = "https://github.com/mhbxyz/fptk/releases"

[tool.ruff]
line-length = 100
target-version = "py312"
lint.select = ["E", "F", "I", "UP", "B", "ANN", "PL"]
lint.ignore = ["ANN101"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
mypy_path = ["src"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]

[tool.hatch.build.targets.wheel]
packages = ["src/fptk"]

[tool.hatch.build.targets.sdist]
include = [
  "src/fptk",
  "README.md",
  "LICENSE",
  "pyproject.toml",
  "release-please-config.json",
  ".release-please-manifest.json",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
